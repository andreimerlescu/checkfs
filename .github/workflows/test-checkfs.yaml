name: Test checkfs Package

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  # Job 1
  test-hosted-runners:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [ '1.20.12', '1.21.7', '1.22.1', '1.23.4', '1.24.2']
      fail-fast: false

    steps:
      - name: Step 1 Checkout checkfs repository
        uses: actions/checkout@v4

      - name: Step 2 Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Step 3 Install dependencies
        run: go mod download

      - name: Step 4 Build checkfs
        run: go build -v ./...

      - name: Step 5 Run unit tests
        run: go test -v ./...

      - name: Step 6 Run benchmarks
        run: go test -v -bench=. -benchmem ./...

  # Job 2
  tLinuxDistros:
    runs-on: ubuntu-latest  # Use Ubuntu as the base runner for Docker
    strategy:
      matrix:
        distro:
          - image: rockylinux/rockylinux:9
            name: Rocky 9
          - image: amazonlinux:2023
            name: Amazon Linux 2023
        go-version: ['1.17.12', '1.18.10', '1.19.13', '1.20.12', '1.21.7', '1.22.1', '1.23.2', '1.24.2']
      fail-fast: false

    steps:
      - name: Step 1 Checkout checkfs repository
        uses: actions/checkout@v4

      - name: Step 2 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Step 3 Run tests in ${{ matrix.distro.name }}
        run: |
          docker run --rm -v $(pwd):/go/src/checkfs -w /go/src/checkfs ${{ matrix.distro.image }} /bin/bash -c "
            curl -LO https://golang.org/dl/go${{ matrix.go-version }}.linux-amd64.tar.gz &&
            tar -C /usr/local -xzf go${{ matrix.go-version }}.linux-amd64.tar.gz &&
            export PATH=\$PATH:/usr/local/go/bin &&
            go mod download &&
            go build -v ./... &&
            go test -v ./... &&
            go test -v -bench=. -benchmem ./...
          "